diff --git a/.idea/misc.xml b/.idea/misc.xml
index d5d35ec..860da66 100644
--- a/.idea/misc.xml
+++ b/.idea/misc.xml
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
diff --git a/.idea/runConfigurations.xml b/.idea/runConfigurations.xml
new file mode 100644
index 0000000..797acea
--- /dev/null
+++ b/.idea/runConfigurations.xml
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="RunConfigurationProducerService">
+    <option name="ignoredProducers">
+      <set>
+        <option value="com.android.tools.idea.compose.preview.runconfiguration.ComposePreviewRunConfigurationProducer" />
+      </set>
+    </option>
+  </component>
+</project>
\ No newline at end of file
diff --git a/app/build.gradle b/app/build.gradle
index 4020688..3478eb6 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -9,7 +9,7 @@ android {
     buildToolsVersion "30.0.3"
 
     defaultConfig {
-        applicationId "at.aau.jokinghazard"
+        applicationId "at.uniquale.jokinghazard"
         minSdkVersion 26
         targetSdkVersion 29
         versionCode 1
diff --git a/app/src/androidTest/java/at/derfl007/jokinghazard/ExampleInstrumentedTest.java b/app/src/androidTest/java/at/uniquale/jokinghazard/ExampleInstrumentedTest.java
similarity index 95%
rename from app/src/androidTest/java/at/derfl007/jokinghazard/ExampleInstrumentedTest.java
rename to app/src/androidTest/java/at/uniquale/jokinghazard/ExampleInstrumentedTest.java
index b50886a..80140bd 100644
--- a/app/src/androidTest/java/at/derfl007/jokinghazard/ExampleInstrumentedTest.java
+++ b/app/src/androidTest/java/at/uniquale/jokinghazard/ExampleInstrumentedTest.java
@@ -1,4 +1,4 @@
-package at.derfl007.jokinghazard;
+package at.uniquale.jokinghazard;
 
 import android.content.Context;
 
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
index a6fd929..c157d9f 100644
--- a/app/src/main/AndroidManifest.xml
+++ b/app/src/main/AndroidManifest.xml
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="utf-8"?>
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    package="at.derfl007.jokinghazard">
+    package="at.uniquale.jokinghazard">
 
     <uses-permission android:name="android.permission.INTERNET" />
 
@@ -11,7 +11,7 @@
         android:roundIcon="@mipmap/ic_launcher_round"
         android:supportsRtl="true"
         android:theme="@style/Theme.JokingHazard">
-        <activity android:name=".activities.MainActivity" android:screenOrientation="landscape" android:immersive="true">
+        <activity android:name="at.uniquale.jokinghazard.activities.MainActivity" android:screenOrientation="landscape" android:immersive="true">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" />
 
diff --git a/app/src/main/java/at/derfl007/jokinghazard/drag_and_drop/DragEvent.java b/app/src/main/java/at/derfl007/jokinghazard/drag_and_drop/DragEvent.java
deleted file mode 100644
index 29541c7..0000000
--- a/app/src/main/java/at/derfl007/jokinghazard/drag_and_drop/DragEvent.java
+++ /dev/null
@@ -1,45 +0,0 @@
-package at.derfl007.jokinghazard.drag_and_drop;
-
-import android.app.Activity;
-import android.content.ClipData;
-import android.content.ClipDescription;
-
-import android.os.Bundle;
-import android.view.View;
-import android.widget.ImageView;
-
-
-public class DragEvent extends Activity {
-
-
-    private static final String IMAGEVIEW = "bitmap";
-    private android.widget.RelativeLayout.LayoutParams layoutParams;
-    //needs imageviews --> Sprint 3
-    ImageView imageView = new ImageView(this);
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-
-        imageView.setOnLongClickListener(new View.OnLongClickListener() {
-            @Override
-            public boolean onLongClick(View v) {
-                ClipData.Item item = new ClipData.Item((CharSequence) v.getTag());
-                String[] mimeTypes = {ClipDescription.MIMETYPE_TEXT_PLAIN};
-
-                ClipData dragData = new ClipData(v.getTag().toString(), mimeTypes, item);
-                View.DragShadowBuilder myShadow = new View.DragShadowBuilder(imageView);
-
-                v.startDragAndDrop(dragData, myShadow, null, 0);
-
-                return true;
-            }
-        });
-
-    }
-}
-
-
-
-
-
diff --git a/app/src/main/java/at/derfl007/jokinghazard/activities/MainActivity.java b/app/src/main/java/at/uniquale/jokinghazard/activities/MainActivity.java
similarity index 91%
rename from app/src/main/java/at/derfl007/jokinghazard/activities/MainActivity.java
rename to app/src/main/java/at/uniquale/jokinghazard/activities/MainActivity.java
index a7855af..8b9c0a3 100644
--- a/app/src/main/java/at/derfl007/jokinghazard/activities/MainActivity.java
+++ b/app/src/main/java/at/uniquale/jokinghazard/activities/MainActivity.java
@@ -1,4 +1,4 @@
-package at.derfl007.jokinghazard.activities;
+package at.uniquale.jokinghazard.activities;
 
 import android.os.Bundle;
 import android.util.Log;
@@ -8,7 +8,7 @@ import androidx.appcompat.app.AppCompatActivity;
 import java.net.URISyntaxException;
 import java.util.Objects;
 
-import at.derfl007.jokinghazard.R;
+import at.uniquale.jokinghazard.R;
 import io.socket.client.IO;
 import io.socket.client.Socket;
 
diff --git a/app/src/main/java/at/uniquale/jokinghazard/drag_and_drop/DragEvent.java b/app/src/main/java/at/uniquale/jokinghazard/drag_and_drop/DragEvent.java
new file mode 100644
index 0000000..d04690b
--- /dev/null
+++ b/app/src/main/java/at/uniquale/jokinghazard/drag_and_drop/DragEvent.java
@@ -0,0 +1,40 @@
+package at.uniquale.jokinghazard.drag_and_drop;
+
+import android.app.Activity;
+import android.content.ClipData;
+import android.content.ClipDescription;
+import android.os.Bundle;
+import android.view.View;
+import android.widget.ImageView;
+
+
+public class DragEvent extends Activity {
+
+
+    private static final String IMAGEVIEW = "bitmap";
+    private android.widget.RelativeLayout.LayoutParams layoutParams;
+    ImageView imageView = new ImageView(this);
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+
+        imageView.setOnLongClickListener(v -> {
+            ClipData.Item item = new ClipData.Item((CharSequence) v.getTag());
+            String[] mimeTypes = {ClipDescription.MIMETYPE_TEXT_PLAIN};
+
+            ClipData dragData = new ClipData(v.getTag().toString(), mimeTypes, item);
+            View.DragShadowBuilder myShadow = new View.DragShadowBuilder(imageView);
+
+            v.startDragAndDrop(dragData, myShadow, null, 0);
+
+            return true;
+        });
+
+    }
+}
+
+
+
+
+
diff --git a/app/src/main/java/at/derfl007/jokinghazard/drag_and_drop/DragListener.java b/app/src/main/java/at/uniquale/jokinghazard/drag_and_drop/DragListener.java
similarity index 78%
rename from app/src/main/java/at/derfl007/jokinghazard/drag_and_drop/DragListener.java
rename to app/src/main/java/at/uniquale/jokinghazard/drag_and_drop/DragListener.java
index f229fad..d40329d 100644
--- a/app/src/main/java/at/derfl007/jokinghazard/drag_and_drop/DragListener.java
+++ b/app/src/main/java/at/uniquale/jokinghazard/drag_and_drop/DragListener.java
@@ -1,4 +1,4 @@
-package at.derfl007.jokinghazard.drag_and_drop;
+package at.uniquale.jokinghazard.drag_and_drop;
 
 import android.content.ClipData;
 import android.content.ClipDescription;
@@ -49,15 +49,6 @@ public class DragListener implements View.OnDragListener {
                 v.setBackgroundColor(Color.TRANSPARENT);
                 v.invalidate();
 
-                //Frage: sollen wir etwas Ausgeben, wenn der Drop erfolreich war?
-
-                                /*if (event.getResult()) {
-                                    Toast.makeText(this, "Du hast eine Karte gespielt", Toast.LENGTH_LONG).show();
-
-                                } else {
-                                    Toast.makeText(this, "Es funktionierte nicht", Toast.LENGTH_LONG).show();
-                                } */
-
                 return true;
 
             case DragEvent.ACTION_DRAG_LOCATION:
@@ -67,4 +58,4 @@ public class DragListener implements View.OnDragListener {
 
         return false;
     }
-};
+}
diff --git a/app/src/main/java/at/derfl007/jokinghazard/drag_and_drop/DragShadow.java b/app/src/main/java/at/uniquale/jokinghazard/drag_and_drop/DragShadow.java
similarity index 94%
rename from app/src/main/java/at/derfl007/jokinghazard/drag_and_drop/DragShadow.java
rename to app/src/main/java/at/uniquale/jokinghazard/drag_and_drop/DragShadow.java
index ec3e3ca..29b0d63 100644
--- a/app/src/main/java/at/derfl007/jokinghazard/drag_and_drop/DragShadow.java
+++ b/app/src/main/java/at/uniquale/jokinghazard/drag_and_drop/DragShadow.java
@@ -1,4 +1,4 @@
-package at.derfl007.jokinghazard.drag_and_drop;
+package at.uniquale.jokinghazard.drag_and_drop;
 
 import android.graphics.Canvas;
 import android.graphics.Color;
diff --git a/app/src/main/java/at/derfl007/jokinghazard/drag_and_drop/MyTouchListener.java b/app/src/main/java/at/uniquale/jokinghazard/drag_and_drop/MyTouchListener.java
similarity index 78%
rename from app/src/main/java/at/derfl007/jokinghazard/drag_and_drop/MyTouchListener.java
rename to app/src/main/java/at/uniquale/jokinghazard/drag_and_drop/MyTouchListener.java
index a22b784..1ddc582 100644
--- a/app/src/main/java/at/derfl007/jokinghazard/drag_and_drop/MyTouchListener.java
+++ b/app/src/main/java/at/uniquale/jokinghazard/drag_and_drop/MyTouchListener.java
@@ -1,4 +1,4 @@
-package at.derfl007.jokinghazard.drag_and_drop;
+package at.uniquale.jokinghazard.drag_and_drop;
 
 import android.content.ClipData;
 import android.view.MotionEvent;
@@ -11,8 +11,7 @@ public final class MyTouchListener implements View.OnTouchListener {
             ClipData data = ClipData.newPlainText("", "");
             View.DragShadowBuilder shadowBuilder = new View.DragShadowBuilder(
                     view);
-            view.startDrag(data, shadowBuilder, view, 0);
-            view.setVisibility(View.INVISIBLE);
+            view.startDragAndDrop(data, shadowBuilder, view, 0);
             return true;
         } else {
             return false;
diff --git a/app/src/main/java/at/derfl007/jokinghazard/fragments/CreateGameFragment.java b/app/src/main/java/at/uniquale/jokinghazard/fragments/CreateGameFragment.java
similarity index 90%
rename from app/src/main/java/at/derfl007/jokinghazard/fragments/CreateGameFragment.java
rename to app/src/main/java/at/uniquale/jokinghazard/fragments/CreateGameFragment.java
index 43c0a7b..2c59094 100644
--- a/app/src/main/java/at/derfl007/jokinghazard/fragments/CreateGameFragment.java
+++ b/app/src/main/java/at/uniquale/jokinghazard/fragments/CreateGameFragment.java
@@ -1,4 +1,4 @@
-package at.derfl007.jokinghazard.fragments;
+package at.uniquale.jokinghazard.fragments;
 
 import android.os.Bundle;
 import android.util.Log;
@@ -18,11 +18,9 @@ import com.google.android.material.snackbar.Snackbar;
 import org.json.JSONException;
 import org.json.JSONObject;
 
-import java.util.Objects;
-
-import at.derfl007.jokinghazard.R;
-import at.derfl007.jokinghazard.activities.MainActivity;
-import at.derfl007.jokinghazard.util.ErrorMessages;
+import at.uniquale.jokinghazard.R;
+import at.uniquale.jokinghazard.activities.MainActivity;
+import at.uniquale.jokinghazard.util.ErrorMessages;
 import io.socket.client.Ack;
 import io.socket.client.Socket;
 
@@ -72,19 +70,15 @@ public class CreateGameFragment extends Fragment {
                         bundle.putString("roomCode", response1.getString("roomCode"));
                         Navigation.findNavController(v).navigate(R.id.action_createGameFragment_to_waitingRoomFragment, bundle);
 
-                    } else if (response1.getString("status").equals("err")){
+                    } else if (response1.getString("status").equals("err")) {
                         Snackbar.make(view, ErrorMessages.convertErrorMessages(response1.getString("msg")), Snackbar.LENGTH_SHORT).show();
                     } else {
-                        // TODO : Handle Exception Sprint 3
                         Log.e("error", "error");
                     }
                 } catch (JSONException e) {
                     e.printStackTrace();
                 }
             }));
-
         });
-
-
     }
 }
\ No newline at end of file
diff --git a/app/src/main/java/at/derfl007/jokinghazard/fragments/EnterNameFragment.java b/app/src/main/java/at/uniquale/jokinghazard/fragments/EnterNameFragment.java
similarity index 94%
rename from app/src/main/java/at/derfl007/jokinghazard/fragments/EnterNameFragment.java
rename to app/src/main/java/at/uniquale/jokinghazard/fragments/EnterNameFragment.java
index d61e24e..dbf8218 100644
--- a/app/src/main/java/at/derfl007/jokinghazard/fragments/EnterNameFragment.java
+++ b/app/src/main/java/at/uniquale/jokinghazard/fragments/EnterNameFragment.java
@@ -1,4 +1,4 @@
-package at.derfl007.jokinghazard.fragments;
+package at.uniquale.jokinghazard.fragments;
 
 import android.os.Bundle;
 import android.util.Log;
@@ -16,10 +16,8 @@ import androidx.navigation.Navigation;
 import org.json.JSONException;
 import org.json.JSONObject;
 
-import java.util.Objects;
-
-import at.derfl007.jokinghazard.R;
-import at.derfl007.jokinghazard.activities.MainActivity;
+import at.uniquale.jokinghazard.R;
+import at.uniquale.jokinghazard.activities.MainActivity;
 import io.socket.client.Ack;
 import io.socket.client.Socket;
 
diff --git a/app/src/main/java/at/derfl007/jokinghazard/fragments/GameBoardFragment.java b/app/src/main/java/at/uniquale/jokinghazard/fragments/GameBoardFragment.java
similarity index 65%
rename from app/src/main/java/at/derfl007/jokinghazard/fragments/GameBoardFragment.java
rename to app/src/main/java/at/uniquale/jokinghazard/fragments/GameBoardFragment.java
index f751a4b..ea6fb08 100644
--- a/app/src/main/java/at/derfl007/jokinghazard/fragments/GameBoardFragment.java
+++ b/app/src/main/java/at/uniquale/jokinghazard/fragments/GameBoardFragment.java
@@ -1,8 +1,4 @@
-package at.derfl007.jokinghazard.fragments;
-
-import androidx.annotation.NonNull;
-import androidx.annotation.Nullable;
-import androidx.fragment.app.Fragment;
+package at.uniquale.jokinghazard.fragments;
 
 import android.content.res.Resources;
 import android.os.Bundle;
@@ -18,21 +14,25 @@ import android.widget.ImageView;
 import android.widget.LinearLayout;
 import android.widget.TextView;
 
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
+import androidx.fragment.app.Fragment;
+import androidx.navigation.Navigation;
+
 import com.google.android.material.snackbar.Snackbar;
 
 import org.json.JSONArray;
 import org.json.JSONException;
 import org.json.JSONObject;
 
-import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Locale;
 import java.util.concurrent.atomic.AtomicBoolean;
 
-import at.derfl007.jokinghazard.R;
-import at.derfl007.jokinghazard.activities.MainActivity;
-import at.derfl007.jokinghazard.drag_and_drop.MyTouchListener;
-import at.derfl007.jokinghazard.util.ErrorMessages;
+import at.uniquale.jokinghazard.R;
+import at.uniquale.jokinghazard.activities.MainActivity;
+import at.uniquale.jokinghazard.drag_and_drop.MyTouchListener;
+import at.uniquale.jokinghazard.util.ErrorMessages;
 import io.socket.client.Ack;
 import io.socket.client.Socket;
 
@@ -158,7 +158,7 @@ public class GameBoardFragment extends Fragment {
             ImageButton player1ImageButtonId1 = view.findViewById(PILES.PLAYER_1.imageButtonIds[i1]);
             player1ImageButtonId1.setEnabled(false);
             player1ImageButtonId1.setOnClickListener(null);
-  //          player1ImageButtonId1.setTag(1, "Player"+(i1+1));
+            //          player1ImageButtonId1.setTag(1, "Player"+(i1+1));
         }
 
         String localPlayerName = EnterNameFragment.localPlayerName;
@@ -186,11 +186,10 @@ public class GameBoardFragment extends Fragment {
                 }
 
                 if (players.length() < 4) {
-                    TextView tva4 = view.findViewById(R.id.avatarName3);
                     TextView tvap4 = view.findViewById(R.id.avatarPoints3);
                     ImageView iva4 = view.findViewById(R.id.avatar3);
                     ImageView ivac4 = view.findViewById(R.id.avatarCards3);
-                    tva4.setVisibility(View.INVISIBLE);
+                    player4TextView.setVisibility(View.INVISIBLE);
                     tvap4.setVisibility(View.INVISIBLE);
                     iva4.setVisibility(View.INVISIBLE);
                     ivac4.setVisibility(View.INVISIBLE);
@@ -225,14 +224,14 @@ public class GameBoardFragment extends Fragment {
         socket.on("room:all_cards_played", args -> requireActivity().runOnUiThread(() -> {
             LinearLayout votingUi = view.findViewById(R.id.votingUiOverlay);
 
-            ImageView panelDeck   = view.findViewById(R.id.ComicStoryImg_Deck);
-            ImageView panelJudge  = view.findViewById(R.id.ComicStoryImg_Judge);
+            ImageView panelDeck = view.findViewById(R.id.ComicStoryImg_Deck);
+            ImageView panelJudge = view.findViewById(R.id.ComicStoryImg_Judge);
             ImageView panleWinner = view.findViewById(R.id.ComicStoryImg_Winner);
 
             panelDeck.setImageResource(getCardImageById(view, (String) view.findViewById(PILES.PANEL_1.imageButtonIds[0]).getTag(R.id.TAG_IMAGE_RESOURCE)));
             panelJudge.setImageResource(getCardImageById(view, (String) view.findViewById(PILES.PANEL_2.imageButtonIds[0]).getTag(R.id.TAG_IMAGE_RESOURCE)));
 
-            ImageButton[] imageButtons = { view.findViewById(R.id.cardOfPlayer1), view.findViewById(R.id.cardOfPlayer2), view.findViewById(R.id.cardOfPlayer3)};
+            ImageButton[] imageButtons = {view.findViewById(R.id.cardOfPlayer1), view.findViewById(R.id.cardOfPlayer2), view.findViewById(R.id.cardOfPlayer3)};
             ImageButton submissionImageButton = view.findViewById(PILES.SUBMISSION.imageButtonIds[0]);
             String[] userIds = ((String[]) submissionImageButton.getTag(R.id.TAG_USER));
             String[] imageIds = ((String[]) submissionImageButton.getTag(R.id.TAG_IMAGE_RESOURCE));
@@ -248,28 +247,30 @@ public class GameBoardFragment extends Fragment {
                 imageButtons[i].setOnClickListener(v -> {
                     panleWinner.setImageResource(getCardImageById(view, (String) v.getTag(R.id.TAG_IMAGE_RESOURCE)));
                     panleWinner.setTag(R.id.TAG_USER, v.getTag(R.id.TAG_USER));
-                    panleWinner.setTag(R.id.TAG_IMAGE_RESOURCE,v.getTag(R.id.TAG_IMAGE_RESOURCE));
+                    panleWinner.setTag(R.id.TAG_IMAGE_RESOURCE, v.getTag(R.id.TAG_IMAGE_RESOURCE));
                     Log.d("GameBoard", (String) panleWinner.getTag(R.id.TAG_USER));
 
                     confirm.setEnabled(true);
                 });
 
-            confirm.setOnClickListener(v -> {
-                if(panleWinner.getTag(R.id.TAG_USER) != null){
-                    Log.d("Probe2", (String) panleWinner.getTag(R.id.TAG_IMAGE_RESOURCE));
-                    socket.emit("room:storyConfirmed", panleWinner.getTag(R.id.TAG_USER), panleWinner.getTag(R.id.TAG_IMAGE_RESOURCE), (Ack) args1 -> {});
-                    socket.emit("user:points:add", panleWinner.getTag(R.id.TAG_USER), pointsPerWinningCard , (Ack) args1 -> {});
+                confirm.setOnClickListener(v -> {
+                    if (panleWinner.getTag(R.id.TAG_USER) != null) {
+                        Log.d("Probe2", (String) panleWinner.getTag(R.id.TAG_IMAGE_RESOURCE));
+                        socket.emit("room:storyConfirmed", panleWinner.getTag(R.id.TAG_USER), panleWinner.getTag(R.id.TAG_IMAGE_RESOURCE), (Ack) args1 -> {
+                        });
+                        socket.emit("user:points:add", panleWinner.getTag(R.id.TAG_USER), pointsPerWinningCard, (Ack) args1 -> {
+                        });
 
-                    votingUi.setVisibility(View.GONE);
-                }
-            });
+                        votingUi.setVisibility(View.GONE);
+                    }
+                });
             }
 
 
             votingUi.setVisibility(View.VISIBLE);
         }));
 
-        socket.on("room:winner", args -> requireActivity().runOnUiThread(()->{
+        socket.on("room:winner", args -> requireActivity().runOnUiThread(() -> {
             try {
                 String playerName = ((JSONObject) args[0]).getString("player");
                 Log.d("Probe", playerName);
@@ -277,7 +278,7 @@ public class GameBoardFragment extends Fragment {
                 Log.d("Probe", cardId);
                 ImageButton winner = view.findViewById(PILES.PANEL_3.imageButtonIds[0]);
                 winner.setImageResource(getCardImageById(view, cardId));
-                Snackbar.make(view, playerName+" won this round!", Snackbar.LENGTH_SHORT).show();
+                Snackbar.make(view, playerName + " won this round!", Snackbar.LENGTH_SHORT).show();
 
                 socket.emit("room:players", (Ack) response -> requireActivity().runOnUiThread(() -> {
                     JSONObject jsonResponse = (JSONObject) response[0];
@@ -285,7 +286,7 @@ public class GameBoardFragment extends Fragment {
                         JSONArray players = jsonResponse.getJSONArray("users");
                         for (int i = 0; i < playerTextViews.length; i++) {
                             for (int j = 0; j < players.length(); j++) {
-                                if(players.getJSONObject(j).getString("name").equals(playerTextViews[i].getText().toString())) {
+                                if (players.getJSONObject(j).getString("name").equals(playerTextViews[i].getText().toString())) {
                                     if (players.getJSONObject(j).has("points")) {
                                         playerPointsViews[i].setText(players.getJSONObject(j).getString("points"));
                                     } else {
@@ -304,8 +305,7 @@ public class GameBoardFragment extends Fragment {
 
         }));
 
-        socket.on("room:gameOver", args -> requireActivity().runOnUiThread(()-> {
-            //System.out.println("Scheißdreck verdammter: " + Arrays.toString(args));
+        socket.on("room:gameOver", args -> requireActivity().runOnUiThread(() -> {
             try {
                 String playerName = ((JSONObject) args[0]).getString("name");
                 Snackbar.make(view, playerName + " hat das Spiel Gewonnen!", Snackbar.LENGTH_SHORT).show();
@@ -313,6 +313,12 @@ public class GameBoardFragment extends Fragment {
                 Snackbar.make(view, "Jemand hat das Spiel Gewonnen!", Snackbar.LENGTH_SHORT).show();
                 e.printStackTrace();
             }
+            try {
+                Thread.sleep(2000);
+                socket.emit("room:leave", (Ack) args1 -> requireActivity().runOnUiThread(() -> Navigation.findNavController(view).navigate(R.id.action_gameBoardFragment_to_startmenuFragment)));
+            } catch (InterruptedException e) {
+                e.printStackTrace();
+            }
         }));
     }
 
@@ -320,8 +326,8 @@ public class GameBoardFragment extends Fragment {
         JSONObject jsonResponse = (JSONObject) response[0];
         try {
             Log.d("RESPONSE", jsonResponse.toString());
-            PILES sourcePile = PILES.getPileById(jsonResponse.getInt("sourcePile"));
-            PILES targetPile = PILES.getPileById(jsonResponse.getInt("targetPile"));
+            int sourcePile = jsonResponse.getInt("sourcePile");
+            int targetPile = jsonResponse.getInt("targetPile");
             int sourceIndex = jsonResponse.getInt("sourceIndex");
             int targetIndex = jsonResponse.getInt("targetIndex");
             String cardId = jsonResponse.getString("cardId");
@@ -341,8 +347,9 @@ public class GameBoardFragment extends Fragment {
             Log.d("RESPONSE", jsonResponse.toString());
 
             try {
-                if (jsonResponse.getString("status").equals("err")) {
-                    Snackbar.make(requireView(), ErrorMessages.convertErrorMessages(jsonResponse.getString("msg")), Snackbar.LENGTH_SHORT).show();
+                View view = getView();
+                if (jsonResponse.getString("status").equals("err") && view != null) {
+                    Snackbar.make(view, ErrorMessages.convertErrorMessages(jsonResponse.getString("msg")), Snackbar.LENGTH_SHORT).show();
                 }
             } catch (JSONException e) {
                 e.printStackTrace();
@@ -388,120 +395,22 @@ public class GameBoardFragment extends Fragment {
 
             ImageButton deck = view.findViewById(R.id.pileDeck);
             deck.setEnabled(true);
+            deck.setOnTouchListener(new MyTouchListener());
 
-
-            deck.setOnClickListener(v -> {
-                // TODO Implement drag and drop here instead of the simple moveCard call
-                moveCard(PILES.DECK.id, PILES.PANEL_1.id, 0, 0);
-                deck.setEnabled(false);
-                deck.setOnClickListener(null);
-
-
-                for (int i = 0; i < 8; i++) {
-                    ImageButton player1ImageButtonId = view.findViewById(PILES.PLAYER_1.imageButtonIds[i]);
-                    player1ImageButtonId.setTag(R.id.TAG_CARD_FINAL_I,i);
-                    player1ImageButtonId.setOnTouchListener(new MyTouchListener());
-                }
-
-                final ImageView image = view.findViewById(R.id.pilePanel1);
-                image.setOnDragListener((vi,event) -> {
-                    int action = event.getAction();
-                    switch (action) {
-                        case DragEvent.ACTION_DRAG_STARTED:
-                            Log.d("Drag", "Drag event started");
-                            break;
-                        case DragEvent.ACTION_DRAG_ENTERED:
-                            Log.d("Drag", "Drag event entered into "+vi.toString());
-                            break;
-                        case DragEvent.ACTION_DRAG_EXITED:
-                            Log.d("Drag", "Drag event exited from "+vi.toString());
-                            break;
-                        case DragEvent.ACTION_DROP:
-                            Log.d("Drag", "Dropped");
-                            int finalI = (int)((View) event.getLocalState()).getTag(R.id.TAG_CARD_FINAL_I);
-
-                            Log.d("cardID", "cId: " + finalI);
-                            moveCard(this.playerPile.id, PILES.PANEL_2.id, finalI, 0);
-                            for (int i1 = 0; i1 < 8; i1++) {
-                                ImageButton player1ImageButtonId1 = view.findViewById(GameBoardFragment.PILES.PLAYER_1.imageButtonIds[i1]);
-                                player1ImageButtonId1.setEnabled(false);
-                                player1ImageButtonId1.setOnTouchListener(null);
-                            }
-                            view.findViewById(R.id.pilePanel1).setOnDragListener(null);
-                            socket.emit("room:playerDone", (Ack) response2 -> requireActivity().runOnUiThread(() -> Log.d("RESPONSE", ((JSONObject) response2[0]).toString())));
-                            countDownTimer.cancel();
-                            timerText.setVisibility(View.INVISIBLE);
-                            break;
-                        case DragEvent.ACTION_DRAG_ENDED:
-                            Log.d("Drag", "Drag ended");
-                            if (!event.getResult()) {
-                                View view2 = (View) event.getLocalState();
-                                view2.setVisibility(View.VISIBLE);
-                            }
-                            //vi.setBackgroundDrawable(normalShape);
-                            break;
-                        default:
-                            break;
-                    }
-                    return true;
-                });
-
-                for (int i = 0; i < 8; i++) {
-                    ImageButton player1ImageButtonId = view.findViewById(PILES.PLAYER_1.imageButtonIds[i]);
-                    player1ImageButtonId.setEnabled(true);
-                }
-            });
+            final ImageButton panel1 = view.findViewById(R.id.pilePanel1);
+            panel1.setOnDragListener((v, event) -> dragListeners(PILES.PANEL_1, view, v, event));
 
         } else {
             for (int i = 0; i < 8; i++) {
                 ImageButton player1ImageButtonId = requireView().findViewById(PILES.PLAYER_1.imageButtonIds[i]);
-                player1ImageButtonId.setTag(R.id.TAG_CARD_FINAL_I,i);
+                player1ImageButtonId.setTag(R.id.TAG_CARD_FINAL_I, i);
+                player1ImageButtonId.setEnabled(true);
                 player1ImageButtonId.setOnTouchListener(new MyTouchListener());
             }
 
 
-            final ImageView image = view.findViewById(R.id.pilePanel1);
-            image.setOnDragListener((v,event) -> {
-                int action = event.getAction();
-                switch (action) {
-                    case DragEvent.ACTION_DRAG_STARTED:
-                        Log.d("Drag", "Drag event started");
-                        break;
-                    case DragEvent.ACTION_DRAG_ENTERED:
-                        Log.d("Drag", "Drag event entered into "+v.toString());
-                        break;
-                    case DragEvent.ACTION_DRAG_EXITED:
-                        Log.d("Drag", "Drag event exited from "+v.toString());
-                        break;
-                    case DragEvent.ACTION_DROP:
-                        Log.d("Drag", "Dropped");
-                        int finalI = (int)((View) event.getLocalState()).getTag(R.id.TAG_CARD_FINAL_I);
-
-                        Log.d("cardID", "cId: " + finalI);
-                        moveCard(this.playerPile.id, GameBoardFragment.PILES.SUBMISSION.id, finalI, 0);
-                        for (int i1 = 0; i1 < 8; i1++) {
-                            ImageButton player1ImageButtonId1 = view.findViewById(GameBoardFragment.PILES.PLAYER_1.imageButtonIds[i1]);
-                            player1ImageButtonId1.setEnabled(false);
-                            player1ImageButtonId1.setOnTouchListener(null);
-                        }
-                        view.findViewById(R.id.pilePanel1).setOnDragListener(null);
-                        socket.emit("room:playerDone", (Ack) response2 -> requireActivity().runOnUiThread(() -> Log.d("RESPONSE", ((JSONObject) response2[0]).toString())));
-                        countDownTimer.cancel();
-                        timerText.setVisibility(View.INVISIBLE);
-                        break;
-                    case DragEvent.ACTION_DRAG_ENDED:
-                        Log.d("Drag", "Drag ended");
-                        if (!event.getResult()) {
-                            View view2 = (View) event.getLocalState();
-                            view2.setVisibility(View.VISIBLE);
-                        }
-                        //v.setBackgroundDrawable(normalShape);
-                        break;
-                    default:
-                        break;
-                }
-                return true;
-            });
+            final ImageView image = view.findViewById(R.id.pileSubmission);
+            image.setOnDragListener((v, event) -> dragListeners(PILES.SUBMISSION, view, v, event));
 
             for (int i = 0; i < 8; i++) {
                 ImageButton player1ImageButtonId = requireView().findViewById(PILES.PLAYER_1.imageButtonIds[i]);
@@ -510,6 +419,89 @@ public class GameBoardFragment extends Fragment {
         }
     }
 
+    // Drag Listeners
+
+    private boolean dragListeners(PILES targetPile, View parentView, View view, DragEvent event) {
+        int action = event.getAction();
+        if (targetPile == PILES.PANEL_1) {
+            switch (action) {
+                case DragEvent.ACTION_DRAG_STARTED:
+                    Log.d("Drag", "Drag event started");
+                    break;
+                case DragEvent.ACTION_DRAG_ENTERED:
+                    Log.d("Drag", "Drag event entered into " + view.toString());
+                    break;
+                case DragEvent.ACTION_DRAG_EXITED:
+                    Log.d("Drag", "Drag event exited from " + view.toString());
+                    break;
+                case DragEvent.ACTION_DROP:
+                    Log.d("Drag", "Dropped");
+                    ImageButton deck = parentView.findViewById(R.id.pileDeck);
+                    moveCard(PILES.DECK.id, PILES.PANEL_1.id, 0, 0);
+                    deck.setEnabled(false);
+                    deck.setOnClickListener(null);
+
+                    for (int i = 0; i < 8; i++) {
+                        ImageButton player1ImageButtonId = parentView.findViewById(PILES.PLAYER_1.imageButtonIds[i]);
+                        player1ImageButtonId.setTag(R.id.TAG_CARD_FINAL_I, i);
+                        player1ImageButtonId.setEnabled(true);
+                        player1ImageButtonId.setOnTouchListener(new MyTouchListener());
+                    }
+
+                    final ImageView image = parentView.findViewById(R.id.pilePanel2);
+                    image.setOnDragListener((v1, event1) -> dragListeners(PILES.PANEL_2, parentView, v1, event1));
+                    break;
+                case DragEvent.ACTION_DRAG_ENDED:
+                    Log.d("Drag", "Drag ended");
+                    if (!event.getResult()) {
+                        View view2 = (View) event.getLocalState();
+                        view2.setVisibility(View.VISIBLE);
+                    }
+                    break;
+                default:
+                    break;
+            }
+        } else {
+            switch (action) {
+                case DragEvent.ACTION_DRAG_STARTED:
+                    Log.d("Drag", "Drag event started");
+                    break;
+                case DragEvent.ACTION_DRAG_ENTERED:
+                    Log.d("Drag", "Drag event entered into " + view.toString());
+                    break;
+                case DragEvent.ACTION_DRAG_EXITED:
+                    Log.d("Drag", "Drag event exited from " + view.toString());
+                    break;
+                case DragEvent.ACTION_DROP:
+                    Log.d("Drag", "Dropped");
+                    int finalI = (int) ((View) event.getLocalState()).getTag(R.id.TAG_CARD_FINAL_I);
+
+                    Log.d("cardID", "cId: " + finalI);
+                    moveCard(this.playerPile.id, targetPile.id, finalI, 0);
+                    for (int i1 = 0; i1 < 8; i1++) {
+                        ImageButton player1ImageButtonId1 = parentView.findViewById(PILES.PLAYER_1.imageButtonIds[i1]);
+                        player1ImageButtonId1.setEnabled(false);
+                        player1ImageButtonId1.setOnTouchListener(null);
+                    }
+                    parentView.findViewById(R.id.pilePanel1).setOnDragListener(null);
+                    socket.emit("room:playerDone", (Ack) response2 -> requireActivity().runOnUiThread(() -> Log.d("RESPONSE", ((JSONObject) response2[0]).toString())));
+                    countDownTimer.cancel();
+                    timerText.setVisibility(View.INVISIBLE);
+                    break;
+                case DragEvent.ACTION_DRAG_ENDED:
+                    Log.d("Drag", "Drag ended");
+                    if (!event.getResult()) {
+                        View view2 = (View) event.getLocalState();
+                        view2.setVisibility(View.VISIBLE);
+                    }
+                    break;
+                default:
+                    break;
+            }
+        }
+        return true;
+    }
+
     private void startTimer(boolean judge) {
 
         Log.d("Debug", "Timer started");
@@ -533,6 +525,7 @@ public class GameBoardFragment extends Fragment {
 
                 timerText.setText(timeLeftFormatted);
             }
+
             @Override
             public void onFinish() {
                 timerRunning = false;
@@ -577,66 +570,63 @@ public class GameBoardFragment extends Fragment {
 
     private void setTime(long millisInput) {
         startTimeMillis = millisInput * 1000;
-        // resetTimer();
     }
 
-    /*
-    private void resetTimer() {
-        timeLeftInMillis = startTimeMillis;
-    }
-    */
-
-    private void setImageButtonCard(View view, PILES pile, @NonNull String cardId, int index, String socketId) {
-        // If the pile is a player pile, check if it belongs to the player, otherwise do nothing
-        if (pile != PILES.DECK && (pile.id < PILES.PLAYER_1.id || pile.id > PILES.PLAYER_4.id || pile.id == this.playerPile.id)) {
-            ImageButton imageButton = view.findViewById(pile.imageButtonIds[index]);
-            if (pile == PILES.SUBMISSION) {
-                if (cardId.equals("-1")) {
-                    imageButton.setImageResource(R.drawable.transparent);
-                    imageButton.setTag(R.id.TAG_CARDS_AMOUNT, 0);
-                    imageButton.setTag(R.id.TAG_IMAGE_RESOURCE, new String[3]);
-                    imageButton.setTag(R.id.TAG_USER, new String[3]);
-                } else {
-                    imageButton.setImageResource(R.drawable.back);
-                    String[] cardIds;
-                    String[] userIds;
-                    int cardsAmount;
-
-                    if (imageButton.getTag(R.id.TAG_IMAGE_RESOURCE) == null) {
-                        cardIds = new String[3];
+    private void setImageButtonCard(View view, int pileId, @NonNull String cardId, int index, String socketId) {
+        if (pileId < 0 || pileId > 9) {
+            Log.e("ERROR", "Something went wrong, the pile number is invalid");
+        } else {
+            PILES pile = PILES.getPileById(pileId);
+            // If the pile is a player pile, check if it belongs to the player, otherwise do nothing
+            if (pile != PILES.DECK && (pile.id < PILES.PLAYER_1.id || pile.id > PILES.PLAYER_4.id || pile.id == this.playerPile.id)) {
+                ImageButton imageButton = view.findViewById(pile.imageButtonIds[index]);
+                if (pile == PILES.SUBMISSION) {
+                    if (cardId.equals("-1")) {
+                        imageButton.setImageResource(R.drawable.transparent);
+                        imageButton.setTag(R.id.TAG_CARDS_AMOUNT, 0);
+                        imageButton.setTag(R.id.TAG_IMAGE_RESOURCE, new String[3]);
+                        imageButton.setTag(R.id.TAG_USER, new String[3]);
                     } else {
-                        cardIds = (String[]) imageButton.getTag(R.id.TAG_IMAGE_RESOURCE);
-                    }
+                        imageButton.setImageResource(R.drawable.back);
+                        String[] cardIds;
+                        String[] userIds;
+                        int cardsAmount;
+
+                        if (imageButton.getTag(R.id.TAG_IMAGE_RESOURCE) == null) {
+                            cardIds = new String[3];
+                        } else {
+                            cardIds = (String[]) imageButton.getTag(R.id.TAG_IMAGE_RESOURCE);
+                        }
 
-                    if (imageButton.getTag(R.id.TAG_USER) == null) {
-                        userIds = new String[3];
-                    } else {
-                        userIds = (String[]) imageButton.getTag(R.id.TAG_USER);
-                    }
+                        if (imageButton.getTag(R.id.TAG_USER) == null) {
+                            userIds = new String[3];
+                        } else {
+                            userIds = (String[]) imageButton.getTag(R.id.TAG_USER);
+                        }
 
-                    if (imageButton.getTag(R.id.TAG_CARDS_AMOUNT) == null) {
-                        cardsAmount = 0;
-                    } else {
-                        cardsAmount = (int) imageButton.getTag(R.id.TAG_CARDS_AMOUNT);
-                    }
+                        if (imageButton.getTag(R.id.TAG_CARDS_AMOUNT) == null) {
+                            cardsAmount = 0;
+                        } else {
+                            cardsAmount = (int) imageButton.getTag(R.id.TAG_CARDS_AMOUNT);
+                        }
 
-                    cardIds[cardsAmount] = cardId;
-                    userIds[cardsAmount] = socketId;
-                    imageButton.setTag(R.id.TAG_CARDS_AMOUNT, cardsAmount + 1);
-                    imageButton.setTag(R.id.TAG_IMAGE_RESOURCE, cardIds);
-                    imageButton.setTag(R.id.TAG_USER, userIds);
-                    Log.d("Test", Arrays.toString(((String[]) imageButton.getTag(R.id.TAG_USER))));
+                        cardIds[cardsAmount] = cardId;
+                        userIds[cardsAmount] = socketId;
+                        imageButton.setTag(R.id.TAG_CARDS_AMOUNT, cardsAmount + 1);
+                        imageButton.setTag(R.id.TAG_IMAGE_RESOURCE, cardIds);
+                        imageButton.setTag(R.id.TAG_USER, userIds);
+                    }
+                } else if (cardId.equals("-1")) {
+                    imageButton.setImageResource(R.drawable.transparent);
+                    imageButton.setTag(R.id.TAG_IMAGE_RESOURCE, "-1");
+                    imageButton.setTag(R.id.TAG_USER, socketId);
+                } else if (pileId == PILES.DISCARD.id) {
+                    imageButton.setImageResource(R.drawable.back);
+                } else {
+                    imageButton.setImageResource(getCardImageById(view, cardId));
+                    imageButton.setTag(R.id.TAG_IMAGE_RESOURCE, cardId);
+                    imageButton.setTag(R.id.TAG_USER, socketId);
                 }
-            } else if (cardId.equals("-1")) {
-                imageButton.setImageResource(R.drawable.transparent);
-                imageButton.setTag(R.id.TAG_IMAGE_RESOURCE, "-1");
-                imageButton.setTag(R.id.TAG_USER, socketId);
-                Log.d("GameBoard", (String) imageButton.getTag(R.id.TAG_USER));
-            } else {
-                imageButton.setImageResource(getCardImageById(view, cardId));
-                imageButton.setTag(R.id.TAG_IMAGE_RESOURCE, cardId);
-                imageButton.setTag(R.id.TAG_USER, socketId);
-                Log.d("GameBoard", (String) imageButton.getTag(R.id.TAG_USER));
             }
         }
     }
@@ -646,4 +636,9 @@ public class GameBoardFragment extends Fragment {
         return resources.getIdentifier("card_" + cardId, "drawable", view.getContext().getPackageName());
     }
 
+    @Override
+    public void onDestroyView() {
+        super.onDestroyView();
+        socket.off();
+    }
 }
\ No newline at end of file
diff --git a/app/src/main/java/at/derfl007/jokinghazard/fragments/JoinGameFragment.java b/app/src/main/java/at/uniquale/jokinghazard/fragments/JoinGameFragment.java
similarity index 93%
rename from app/src/main/java/at/derfl007/jokinghazard/fragments/JoinGameFragment.java
rename to app/src/main/java/at/uniquale/jokinghazard/fragments/JoinGameFragment.java
index 902bdae..57d4621 100644
--- a/app/src/main/java/at/derfl007/jokinghazard/fragments/JoinGameFragment.java
+++ b/app/src/main/java/at/uniquale/jokinghazard/fragments/JoinGameFragment.java
@@ -1,4 +1,4 @@
-package at.derfl007.jokinghazard.fragments;
+package at.uniquale.jokinghazard.fragments;
 
 import android.os.Bundle;
 import android.util.Log;
@@ -18,11 +18,9 @@ import com.google.android.material.snackbar.Snackbar;
 import org.json.JSONException;
 import org.json.JSONObject;
 
-import java.util.Objects;
-
-import at.derfl007.jokinghazard.R;
-import at.derfl007.jokinghazard.activities.MainActivity;
-import at.derfl007.jokinghazard.util.ErrorMessages;
+import at.uniquale.jokinghazard.R;
+import at.uniquale.jokinghazard.activities.MainActivity;
+import at.uniquale.jokinghazard.util.ErrorMessages;
 import io.socket.client.Ack;
 import io.socket.client.Socket;
 
diff --git a/app/src/main/java/at/derfl007/jokinghazard/fragments/StartmenuFragment.java b/app/src/main/java/at/uniquale/jokinghazard/fragments/StartmenuFragment.java
similarity index 93%
rename from app/src/main/java/at/derfl007/jokinghazard/fragments/StartmenuFragment.java
rename to app/src/main/java/at/uniquale/jokinghazard/fragments/StartmenuFragment.java
index 57cc3ff..8e13c61 100644
--- a/app/src/main/java/at/derfl007/jokinghazard/fragments/StartmenuFragment.java
+++ b/app/src/main/java/at/uniquale/jokinghazard/fragments/StartmenuFragment.java
@@ -1,4 +1,4 @@
-package at.derfl007.jokinghazard.fragments;
+package at.uniquale.jokinghazard.fragments;
 
 import android.os.Bundle;
 import android.view.LayoutInflater;
@@ -11,8 +11,8 @@ import androidx.annotation.Nullable;
 import androidx.fragment.app.Fragment;
 import androidx.navigation.Navigation;
 
-import at.derfl007.jokinghazard.R;
-import at.derfl007.jokinghazard.activities.MainActivity;
+import at.uniquale.jokinghazard.R;
+import at.uniquale.jokinghazard.activities.MainActivity;
 import io.socket.client.Socket;
 
 public class StartmenuFragment extends Fragment {
diff --git a/app/src/main/java/at/derfl007/jokinghazard/fragments/VotingUIFragment.java b/app/src/main/java/at/uniquale/jokinghazard/fragments/VotingUIFragment.java
similarity index 76%
rename from app/src/main/java/at/derfl007/jokinghazard/fragments/VotingUIFragment.java
rename to app/src/main/java/at/uniquale/jokinghazard/fragments/VotingUIFragment.java
index 6f7bbde..88f17eb 100644
--- a/app/src/main/java/at/derfl007/jokinghazard/fragments/VotingUIFragment.java
+++ b/app/src/main/java/at/uniquale/jokinghazard/fragments/VotingUIFragment.java
@@ -1,36 +1,28 @@
-package at.derfl007.jokinghazard.fragments;
+package at.uniquale.jokinghazard.fragments;
 
 
-import android.content.Intent;
-import android.graphics.drawable.Drawable;
 import android.os.Bundle;
-
-import androidx.annotation.NonNull;
-import androidx.annotation.Nullable;
-import androidx.fragment.app.Fragment;
-import androidx.fragment.app.FragmentManager;
-
-import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.Button;
 import android.widget.ImageButton;
 import android.widget.ImageView;
-import android.widget.LinearLayout;
+
+import androidx.fragment.app.Fragment;
+
 import java.util.ArrayList;
 
-import at.derfl007.jokinghazard.activities.MainActivity;
+import at.uniquale.jokinghazard.R;
+import at.uniquale.jokinghazard.activities.MainActivity;
 import io.socket.client.Socket;
 
-import at.derfl007.jokinghazard.R;
-
 
 public class VotingUIFragment extends Fragment {
 
     public final static String playedCardsParam = "playedCardsThisRound";
     public final static String logTag = "VotingUIFragment";
-    private int storyLeanght = 2;   //paramter to determine the leanght of the Story
+    private final int storyLeanght = 2;   //paramter to determine the leanght of the Story
 
     private ArrayList<ImageButton> selecteableCards;
     private ArrayList<ImageView> cardsOfTheStory;
@@ -53,14 +45,14 @@ public class VotingUIFragment extends Fragment {
         return fragment;
     }
 
-    public void loadImageView(int ImageViewId,int idImgSrc){
+    public void loadImageView(int ImageViewId, int idImgSrc) {
         ImageView i = getView().findViewById(ImageViewId);
         i.setImageResource((idImgSrc));
         cardsOfTheStory.add(i);
     }
 
-    public void loadImageButton(int ImageViewId,int idImgSrc){
-        if(idImgSrc != 0){
+    public void loadImageButton(int ImageViewId, int idImgSrc) {
+        if (idImgSrc != 0) {
             ImageButton i = getView().findViewById(ImageViewId);
             i.setImageResource((idImgSrc));
             i.setOnClickListener(x -> {
@@ -86,11 +78,11 @@ public class VotingUIFragment extends Fragment {
         return inflater.inflate(R.layout.fragment_voting_ui, container, false);
     }
 
-    private void enableConfirmationButton(){
+    private void enableConfirmationButton() {
         Button confirmBtn = getView().findViewById(R.id.confirmStory);
         confirmBtn.setEnabled(true);
         confirmBtn.setOnClickListener(x -> {
-                // ToDo send an Event and get the User who ownes the Card
+            // ToDo send an Event and get the User who ownes the Card
         });
     }
 }
\ No newline at end of file
diff --git a/app/src/main/java/at/derfl007/jokinghazard/fragments/WaitingRoomFragment.java b/app/src/main/java/at/uniquale/jokinghazard/fragments/WaitingRoomFragment.java
similarity index 95%
rename from app/src/main/java/at/derfl007/jokinghazard/fragments/WaitingRoomFragment.java
rename to app/src/main/java/at/uniquale/jokinghazard/fragments/WaitingRoomFragment.java
index 4d488ea..5844b92 100644
--- a/app/src/main/java/at/derfl007/jokinghazard/fragments/WaitingRoomFragment.java
+++ b/app/src/main/java/at/uniquale/jokinghazard/fragments/WaitingRoomFragment.java
@@ -1,4 +1,4 @@
-package at.derfl007.jokinghazard.fragments;
+package at.uniquale.jokinghazard.fragments;
 
 import android.os.Bundle;
 import android.util.Log;
@@ -21,15 +21,13 @@ import org.json.JSONArray;
 import org.json.JSONException;
 import org.json.JSONObject;
 
-import java.util.Objects;
 import java.util.concurrent.atomic.AtomicBoolean;
 
-import at.derfl007.jokinghazard.R;
-import at.derfl007.jokinghazard.activities.MainActivity;
-import at.derfl007.jokinghazard.util.ErrorMessages;
+import at.uniquale.jokinghazard.R;
+import at.uniquale.jokinghazard.activities.MainActivity;
+import at.uniquale.jokinghazard.util.ErrorMessages;
 import io.socket.client.Ack;
 import io.socket.client.Socket;
-import io.socket.emitter.Emitter;
 
 public class WaitingRoomFragment extends Fragment {
 
@@ -76,7 +74,8 @@ public class WaitingRoomFragment extends Fragment {
         OnBackPressedCallback callback = new OnBackPressedCallback(true) {
             @Override
             public void handleOnBackPressed() {
-                socket.emit("room:leave", (Ack) response -> {});
+                socket.emit("room:leave", (Ack) response -> {
+                });
                 Navigation.findNavController(view).navigateUp();
             }
         };
@@ -185,5 +184,6 @@ public class WaitingRoomFragment extends Fragment {
     public void onDestroyView() {
         super.onDestroyView();
         socket.off("room:admin_started_game");
+        socket.off("msg:info");
     }
 }
\ No newline at end of file
diff --git a/app/src/main/java/at/derfl007/jokinghazard/util/ErrorMessages.java b/app/src/main/java/at/uniquale/jokinghazard/util/ErrorMessages.java
similarity index 96%
rename from app/src/main/java/at/derfl007/jokinghazard/util/ErrorMessages.java
rename to app/src/main/java/at/uniquale/jokinghazard/util/ErrorMessages.java
index 039e515..a9bcacd 100644
--- a/app/src/main/java/at/derfl007/jokinghazard/util/ErrorMessages.java
+++ b/app/src/main/java/at/uniquale/jokinghazard/util/ErrorMessages.java
@@ -1,4 +1,4 @@
-package at.derfl007.jokinghazard.util;
+package at.uniquale.jokinghazard.util;
 
 public class ErrorMessages {
 
@@ -6,7 +6,7 @@ public class ErrorMessages {
 
         String converted = "An Error occured";
 
-        switch(errorCode) {
+        switch (errorCode) {
 
             case "already_in_room":
                 converted = "You are already in a room";
diff --git a/app/src/main/res/layout/fragment_game_board.xml b/app/src/main/res/layout/fragment_game_board.xml
index 83a7bb9..57fd78e 100644
--- a/app/src/main/res/layout/fragment_game_board.xml
+++ b/app/src/main/res/layout/fragment_game_board.xml
@@ -162,7 +162,7 @@
             android:orientation="horizontal">
 
             <ImageButton
-                android:id="@+id/pileDeck"
+                android:id="@+id/pileDeckBg"
                 android:layout_width="136dp"
                 android:layout_height="match_parent"
                 android:layout_weight="1"
@@ -170,6 +170,17 @@
                 android:scaleType="centerCrop"
                 android:src="@drawable/stapel" />
 
+            <ImageButton
+                android:id="@+id/pileDeck"
+                android:layout_width="101dp"
+                android:layout_height="105dp"
+                android:layout_marginStart="-92dp"
+                android:layout_marginTop="10dp"
+                android:layout_weight="1"
+                android:background="#FFFFFF"
+                android:scaleType="centerCrop"
+                android:src="@drawable/back" />
+
             <ImageButton
                 android:id="@+id/pileDiscard"
                 android:layout_width="136dp"
@@ -377,7 +388,7 @@
 
         <androidx.fragment.app.FragmentContainerView
             android:id="@+id/fragmentContainerView"
-            android:name="at.derfl007.jokinghazard.fragments.VotingUIFragment"
+            android:name="at.uniquale.jokinghazard.fragments.VotingUIFragment"
             android:layout_width="match_parent"
             android:layout_height="match_parent" />
     </LinearLayout>
@@ -392,6 +403,31 @@
         android:orientation="vertical"
         android:visibility="invisible">
 
+        <LinearLayout
+            android:id="@+id/overlay"
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:layout_marginLeft="-50px"
+            android:alpha="0.8"
+            android:background="#000000"
+            android:gravity="center_horizontal|center_vertical"
+            android:orientation="vertical"
+            android:visibility="invisible">
+
+            <ProgressBar
+                android:id="@+id/progressBar"
+                style="?android:attr/progressBarStyle"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:indeterminate="true" />
+
+            <TextView
+                android:id="@+id/textView"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="@string/waiting_for_players" />
+        </LinearLayout>
+
         <ProgressBar
             android:id="@+id/progressBar"
             style="?android:attr/progressBarStyle"
diff --git a/app/src/main/res/layout/fragment_startmenu.xml b/app/src/main/res/layout/fragment_startmenu.xml
index d2f2eee..bd108bb 100644
--- a/app/src/main/res/layout/fragment_startmenu.xml
+++ b/app/src/main/res/layout/fragment_startmenu.xml
@@ -11,6 +11,7 @@
         android:id="@+id/backgroundImageView"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
+        android:scaleType="fitXY"
         app:layout_constraintBottom_toBottomOf="parent"
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintHorizontal_bias="1.0"
diff --git a/app/src/main/res/navigation/nav_graph.xml b/app/src/main/res/navigation/nav_graph.xml
index a7a19ba..6adba41 100644
--- a/app/src/main/res/navigation/nav_graph.xml
+++ b/app/src/main/res/navigation/nav_graph.xml
@@ -6,7 +6,7 @@
     app:startDestination="@id/startmenuFragment">
     <fragment
         android:id="@+id/createGameFragment"
-        android:name="at.derfl007.jokinghazard.fragments.CreateGameFragment"
+        android:name="at.uniquale.jokinghazard.fragments.CreateGameFragment"
         android:label="fragment_create_game"
         tools:layout="@layout/fragment_create_game">
         <action
@@ -15,7 +15,7 @@
     </fragment>
     <fragment
         android:id="@+id/joinGameFragment"
-        android:name="at.derfl007.jokinghazard.fragments.JoinGameFragment"
+        android:name="at.uniquale.jokinghazard.fragments.JoinGameFragment"
         android:label="fragment_join_game"
         tools:layout="@layout/fragment_join_game">
         <action
@@ -24,7 +24,7 @@
     </fragment>
     <fragment
         android:id="@+id/enterNameFragment"
-        android:name="at.derfl007.jokinghazard.fragments.EnterNameFragment"
+        android:name="at.uniquale.jokinghazard.fragments.EnterNameFragment"
         android:label="fragment_join_game_enter_name"
         tools:layout="@layout/fragment_enter_name">
         <action
@@ -39,7 +39,7 @@
     </fragment>
     <fragment
         android:id="@+id/startmenuFragment"
-        android:name="at.derfl007.jokinghazard.fragments.StartmenuFragment"
+        android:name="at.uniquale.jokinghazard.fragments.StartmenuFragment"
         android:label="fragment_startmenu"
         tools:layout="@layout/fragment_startmenu">
         <action
@@ -50,7 +50,7 @@
     </fragment>
     <fragment
         android:id="@+id/waitingRoomFragment"
-        android:name="at.derfl007.jokinghazard.fragments.WaitingRoomFragment"
+        android:name="at.uniquale.jokinghazard.fragments.WaitingRoomFragment"
         android:label="fragment_waiting_room"
         tools:layout="@layout/fragment_waiting_room" >
         <action
@@ -63,16 +63,19 @@
     </fragment>
     <fragment
         android:id="@+id/gameBoardFragment"
-        android:name="at.derfl007.jokinghazard.fragments.GameBoardFragment"
+        android:name="at.uniquale.jokinghazard.fragments.GameBoardFragment"
         android:label="fragment_game_board"
         tools:layout="@layout/fragment_game_board" >
         <action
             android:id="@+id/action_gameBoardFragment_to_votingUIFragment"
             app:destination="@id/votingUIFragment" />
+        <action
+            android:id="@+id/action_gameBoardFragment_to_startmenuFragment"
+            app:destination="@id/startmenuFragment" />
     </fragment>
     <fragment
         android:id="@+id/votingUIFragment"
-        android:name="at.derfl007.jokinghazard.fragments.VotingUIFragment"
+        android:name="at.uniquale.jokinghazard.fragments.VotingUIFragment"
         android:label="fragment_voting_ui"
         tools:layout="@layout/fragment_voting_ui" />
 </navigation>
\ No newline at end of file
diff --git a/app/src/main/res/values/drag_events.xml b/app/src/main/res/values/drag_events.xml
new file mode 100644
index 0000000..7d3286c
--- /dev/null
+++ b/app/src/main/res/values/drag_events.xml
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <item name="drag_player_to_panel_1" type="id" />
+    <item name="drag_player_to_panel_2" type="id" />
+    <item name="drag_player_to_submission" type="id" />
+</resources>
\ No newline at end of file
diff --git a/app/src/test/java/at/derfl007/jokinghazard/ExampleUnitTest.java b/app/src/test/java/at/uniquale/jokinghazard/ExampleUnitTest.java
similarity index 90%
rename from app/src/test/java/at/derfl007/jokinghazard/ExampleUnitTest.java
rename to app/src/test/java/at/uniquale/jokinghazard/ExampleUnitTest.java
index f638eb3..c15be8b 100644
--- a/app/src/test/java/at/derfl007/jokinghazard/ExampleUnitTest.java
+++ b/app/src/test/java/at/uniquale/jokinghazard/ExampleUnitTest.java
@@ -1,4 +1,4 @@
-package at.derfl007.jokinghazard;
+package at.uniquale.jokinghazard;
 
 import org.junit.Test;
 
